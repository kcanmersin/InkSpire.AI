worker_processes auto; // NGINX'in çalıştıracağı worker process (işlem) sayısını belirler. "auto" değeri CPU çekirdek sayısına göre dinamik olarak ayarlanır.

events {
    worker_connections 1024; // Her worker process'in aynı anda kabul edebileceği maksimum bağlantı sayısı.
}

http {
    include /etc/nginx/mime.types; // MIME türlerini belirleyen dosya dahil ediliyor, böylece dosyalar doğru Content-Type ile sunulabilir.
    default_type application/octet-stream; // Eğer bir dosyanın MIME türü belirlenemezse, varsayılan olarak binary (octet-stream) olarak sunulur.

    upstream backend_servers { // Backend API sunucularını tanımlayan "upstream" bloğu (Load Balancer olarak kullanılıyor).
        server backend-1:8080; // İlk backend sunucusu.
        server backend-2:8080; // İkinci backend sunucusu.
    }

    server {
        listen 80; // NGINX'in 80 numaralı HTTP portunu dinlemesini sağlar.

        # Frontend Serve
        location / { // Ana sayfa ve frontend statik dosyaları için yapılandırma.
            root /usr/share/nginx/html; // Statik dosyaların bulunduğu dizin.
            index index.html; // Varsayılan olarak yüklenmesi gereken dosya.
            try_files $uri /index.html; // Eğer istenen dosya yoksa index.html gösterilecek (SPA framework'leri için önemli).
            add_header Cache-Control "public, max-age=31536000, immutable"; // Önbellekleme etkinleştirilir (1 yıl).
        }

        # Backend API Yönlendirme
        location /api/ { // /api/ ile başlayan istekleri backend sunucularına yönlendirir.
            proxy_pass http://backend_servers/api/; // API isteklerini backend sunuculara iletir.
            proxy_set_header Host $host; // Orijinal Host başlığını backend'e gönderir.
            proxy_set_header X-Real-IP $remote_addr; // Kullanıcının gerçek IP adresini backend'e iletir.
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; // Proxy üzerinden gelen istemcilerin IP bilgisini korur.
            proxy_set_header X-Forwarded-Proto $scheme; // HTTP/HTTPS protokol bilgisini iletir.
        }

        # Metrics Endpoint Yönlendirme (Prometheus için)
        location /metrics { // /metrics endpoint'ini backend sunucularına yönlendirir (Prometheus izleme için kullanılır).
            proxy_pass http://backend_servers/metrics; // Metrics isteklerini backend'e iletir.
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Statik Dosya Önbellekleme
        location ~* \.(js|css|json|ico|png|jpg|jpeg|gif|svg|woff|woff2|ttf|otf|eot|mp4|webm|ogg|mp3|wav|flac|aac)$ { 
            // Belirtilen dosya türleri için uzun süreli önbellekleme uygulanıyor.
            root /usr/share/nginx/html; // Statik dosyalar buradan servis edilir.
            expires max; // Tarayıcı önbellekleme süresi en uzun seviyeye ayarlanır.
            log_not_found off; // Eksik dosyalar için log kaydı tutulmaz (log yükünü azaltır).
            access_log off; // Bu dosyalar için access log devre dışı bırakılır (performansı artırır).
            add_header Cache-Control "public, max-age=31536000, immutable"; // 1 yıl önbellekleme süresi belirlenir.
        }
    }
}
