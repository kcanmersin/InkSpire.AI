version: '3.8'

services:
  nginx:
    image: nginx:latest
    container_name: nginx-container
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend/dist:/usr/share/nginx/html
    ports:
      - "80:80"
    depends_on:
      - backend-1
      - backend-2
      - frontend
    networks:
      - app_network

  backend-1:
    build:
      context: ./backend/Inkspire.AI
      dockerfile: API/API/Dockerfile
    expose:
      - "8080"
    env_file:
      - .env
    volumes:
      - data_protection:/root/.aspnet/DataProtection-Keys
    depends_on:
      - mysql
      - redis
      - elasticsearch
      - logstash
    networks:
      - app_network

  backend-2:
    build:
      context: ./backend/Inkspire.AI
      dockerfile: API/API/Dockerfile
    expose:
      - "8080"
    env_file:
      - .env
    volumes:
      - data_protection:/root/.aspnet/DataProtection-Keys
    depends_on:
      - mysql
      - redis
      - elasticsearch
      - logstash
    networks:
      - app_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    expose:
      - "5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend-1
      - backend-2
    networks:
      - app_network

  mysql:
    image: mysql:latest
    container_name: mysql-container
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=mydb
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app_network

  redis:
    image: redis:latest
    container_name: redis-container
    ports:
      - "6379:6379"
    networks:
      - app_network

  elasticsearch:
    image: elasticsearch:8.15.0
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - app_network

  logstash:
    image: docker.elastic.co/logstash/logstash:8.15.0
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5044:5044"
    depends_on:
      - elasticsearch
    networks:
      - app_network

  kibana:
    image: kibana:8.14.3
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - app_network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - backend-1
      - backend-2
    networks:
      - app_network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - app_network

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - "9100:9100"
    networks:
      - app_network

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8081:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - app_network

volumes:
  mysql_data:
    driver: local
  es_data:
    driver: local
  data_protection:
    driver: local
  grafana_data:
    driver: local

networks:
  app_network:
    driver: bridge
